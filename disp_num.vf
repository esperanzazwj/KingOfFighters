////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : disp_num.vf
// /___/   /\     Timestamp : 12/27/2015 00:22:16
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3 -verilog C:/Users/Administrator/Desktop/Course_Project/disp_num.vf -w C:/Users/Administrator/Desktop/Course_Project/disp_num.sch
//Design Name: disp_num
//Device: spartan3
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MY_MC14495_MUSER_disp_num(D0, 
                                 D1, 
                                 D2, 
                                 D3, 
                                 LE, 
                                 point, 
                                 a, 
                                 b, 
                                 c, 
                                 d, 
                                 e, 
                                 f, 
                                 g, 
                                 p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire XLXN_129;
   wire XLXN_130;
   wire XLXN_131;
   wire XLXN_132;
   wire XLXN_133;
   wire XLXN_134;
   wire XLXN_135;
   wire XLXN_136;
   wire XLXN_137;
   wire XLXN_138;
   wire XLXN_139;
   wire XLXN_140;
   wire XLXN_141;
   wire XLXN_142;
   wire XLXN_143;
   wire XLXN_144;
   wire XLXN_145;
   wire XLXN_146;
   wire XLXN_148;
   wire XLXN_149;
   wire XLXN_152;
   wire XLXN_156;
   wire XLXN_158;
   wire XLXN_166;
   wire XLXN_171;
   wire XLXN_178;
   wire XLXN_179;
   wire XLXN_180;
   wire XLXN_184;
   wire XLXN_185;
   wire XLXN_186;
   wire XLXN_187;
   
   INV  XLXI_97 (.I(D0), 
                .O(XLXN_171));
   INV  XLXI_98 (.I(D1), 
                .O(XLXN_166));
   INV  XLXI_99 (.I(D2), 
                .O(XLXN_158));
   INV  XLXI_100 (.I(D3), 
                 .O(XLXN_156));
   AND4  XLXI_228 (.I0(XLXN_171), 
                  .I1(XLXN_166), 
                  .I2(D2), 
                  .I3(D3), 
                  .O(XLXN_129));
   AND4  XLXI_229 (.I0(D0), 
                  .I1(D1), 
                  .I2(D2), 
                  .I3(XLXN_156), 
                  .O(XLXN_130));
   AND3  XLXI_233 (.I0(XLXN_166), 
                  .I1(XLXN_158), 
                  .I2(XLXN_156), 
                  .O(XLXN_131));
   AND3  XLXI_234 (.I0(D0), 
                  .I1(D1), 
                  .I2(XLXN_156), 
                  .O(XLXN_132));
   AND3  XLXI_235 (.I0(D1), 
                  .I1(XLXN_158), 
                  .I2(XLXN_156), 
                  .O(XLXN_133));
   AND3  XLXI_236 (.I0(D0), 
                  .I1(XLXN_158), 
                  .I2(XLXN_156), 
                  .O(XLXN_134));
   AND3  XLXI_237 (.I0(D0), 
                  .I1(XLXN_166), 
                  .I2(XLXN_158), 
                  .O(XLXN_136));
   AND3  XLXI_238 (.I0(XLXN_166), 
                  .I1(D2), 
                  .I2(XLXN_156), 
                  .O(XLXN_137));
   AND2  XLXI_239 (.I0(D0), 
                  .I1(XLXN_156), 
                  .O(XLXN_138));
   AND4  XLXI_240 (.I0(XLXN_171), 
                  .I1(D1), 
                  .I2(XLXN_158), 
                  .I3(D3), 
                  .O(XLXN_139));
   AND3  XLXI_241 (.I0(D0), 
                  .I1(D1), 
                  .I2(D2), 
                  .O(XLXN_140));
   AND3  XLXI_242 (.I0(D1), 
                  .I1(D2), 
                  .I2(D3), 
                  .O(XLXN_143));
   AND4  XLXI_243 (.I0(XLXN_171), 
                  .I1(D1), 
                  .I2(XLXN_158), 
                  .I3(XLXN_156), 
                  .O(XLXN_144));
   AND3  XLXI_244 (.I0(D0), 
                  .I1(D1), 
                  .I2(D3), 
                  .O(XLXN_146));
   AND3  XLXI_245 (.I0(XLXN_171), 
                  .I1(D2), 
                  .I2(D3), 
                  .O(XLXN_145));
   AND3  XLXI_246 (.I0(XLXN_171), 
                  .I1(D1), 
                  .I2(D2), 
                  .O(XLXN_148));
   AND4  XLXI_247 (.I0(D0), 
                  .I1(XLXN_166), 
                  .I2(D2), 
                  .I3(XLXN_156), 
                  .O(XLXN_149));
   AND4  XLXI_248 (.I0(D0), 
                  .I1(D1), 
                  .I2(XLXN_158), 
                  .I3(D3), 
                  .O(XLXN_152));
   AND4  XLXI_249 (.I0(D0), 
                  .I1(XLXN_166), 
                  .I2(D2), 
                  .I3(D3), 
                  .O(XLXN_135));
   AND4  XLXI_250 (.I0(XLXN_171), 
                  .I1(XLXN_166), 
                  .I2(D2), 
                  .I3(XLXN_156), 
                  .O(XLXN_141));
   AND4  XLXI_271 (.I0(D0), 
                  .I1(XLXN_158), 
                  .I2(XLXN_166), 
                  .I3(XLXN_156), 
                  .O(XLXN_142));
   OR3  XLXI_272 (.I0(XLXN_129), 
                 .I1(XLXN_130), 
                 .I2(XLXN_131), 
                 .O(XLXN_187));
   OR4  XLXI_273 (.I0(XLXN_132), 
                 .I1(XLXN_133), 
                 .I2(XLXN_134), 
                 .I3(XLXN_135), 
                 .O(XLXN_186));
   OR3  XLXI_274 (.I0(XLXN_136), 
                 .I1(XLXN_137), 
                 .I2(XLXN_138), 
                 .O(XLXN_185));
   OR4  XLXI_275 (.I0(XLXN_139), 
                 .I1(XLXN_140), 
                 .I2(XLXN_141), 
                 .I3(XLXN_142), 
                 .O(XLXN_184));
   OR3  XLXI_276 (.I0(XLXN_143), 
                 .I1(XLXN_144), 
                 .I2(XLXN_145), 
                 .O(XLXN_180));
   OR4  XLXI_277 (.I0(XLXN_146), 
                 .I1(XLXN_145), 
                 .I2(XLXN_148), 
                 .I3(XLXN_149), 
                 .O(XLXN_179));
   OR4  XLXI_278 (.I0(XLXN_152), 
                 .I1(XLXN_135), 
                 .I2(XLXN_141), 
                 .I3(XLXN_142), 
                 .O(XLXN_178));
   OR2  XLXI_290 (.I0(LE), 
                 .I1(XLXN_187), 
                 .O(g));
   OR2  XLXI_291 (.I0(LE), 
                 .I1(XLXN_186), 
                 .O(f));
   OR2  XLXI_292 (.I0(LE), 
                 .I1(XLXN_185), 
                 .O(e));
   OR2  XLXI_293 (.I0(LE), 
                 .I1(XLXN_184), 
                 .O(d));
   OR2  XLXI_294 (.I0(LE), 
                 .I1(XLXN_180), 
                 .O(c));
   OR2  XLXI_295 (.I0(LE), 
                 .I1(XLXN_179), 
                 .O(b));
   OR2  XLXI_296 (.I0(LE), 
                 .I1(XLXN_178), 
                 .O(a));
   INV  XLXI_297 (.I(point), 
                 .O(p));
endmodule
`timescale 1ns / 1ps

module Mux4to1_MUSER_disp_num(I0, 
                              I1, 
                              I2, 
                              I3, 
                              s, 
                              o);

    input I0;
    input I1;
    input I2;
    input I3;
    input [1:0] s;
   output o;
   
   wire XLXN_17;
   wire XLXN_20;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   
   AND2  XLXI_1 (.I0(XLXN_20), 
                .I1(XLXN_17), 
                .O(XLXN_26));
   AND2  XLXI_2 (.I0(s[0]), 
                .I1(XLXN_17), 
                .O(XLXN_27));
   AND2  XLXI_3 (.I0(s[1]), 
                .I1(XLXN_20), 
                .O(XLXN_28));
   AND2  XLXI_4 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_29));
   AND2  XLXI_5 (.I0(I0), 
                .I1(XLXN_26), 
                .O(XLXN_30));
   AND2  XLXI_6 (.I0(I1), 
                .I1(XLXN_27), 
                .O(XLXN_31));
   AND2  XLXI_7 (.I0(I2), 
                .I1(XLXN_28), 
                .O(XLXN_32));
   AND2  XLXI_8 (.I0(I3), 
                .I1(XLXN_29), 
                .O(XLXN_33));
   INV  XLXI_9 (.I(s[1]), 
               .O(XLXN_17));
   INV  XLXI_10 (.I(s[0]), 
                .O(XLXN_20));
   OR4  XLXI_11 (.I0(XLXN_33), 
                .I1(XLXN_32), 
                .I2(XLXN_31), 
                .I3(XLXN_30), 
                .O(o));
endmodule
`timescale 1ns / 1ps

module Dispsync_MUSER_disp_num(Hexs, 
                               LES, 
                               point, 
                               Scan, 
                               AN, 
                               Hex, 
                               LE, 
                               p);

    input [15:0] Hexs;
    input [3:0] LES;
    input [3:0] point;
    input [1:0] Scan;
   output [3:0] AN;
   output [3:0] Hex;
   output LE;
   output p;
   
   wire [3:0] XLXN_21;
   wire [3:0] XLXN_22;
   wire [3:0] XLXN_23;
   wire [3:0] XLXN_24;
   
   assign XLXN_21 = 4'hE;
   assign XLXN_22 = 4'hD;
   assign XLXN_23 = 4'hB;
   assign XLXN_24 = 4'h7;
   Mux441  XLXI_3 (.num1(Hexs[3:0]), 
                  .num2(Hexs[7:4]), 
                  .num3(Hexs[11:8]), 
                  .num4(Hexs[15:12]), 
                  .sel(Scan[1:0]), 
                  .num(Hex[3:0]));
   Mux441  XLXI_4 (.num1(XLXN_21[3:0]), 
                  .num2(XLXN_22[3:0]), 
                  .num3(XLXN_23[3:0]), 
                  .num4(XLXN_24[3:0]), 
                  .sel(Scan[1:0]), 
                  .num(AN[3:0]));
   Mux4to1_MUSER_disp_num  XLXI_5 (.I0(point[0]), 
                                  .I1(point[1]), 
                                  .I2(point[2]), 
                                  .I3(point[3]), 
                                  .s(Scan[1:0]), 
                                  .o(p));
   Mux4to1_MUSER_disp_num  XLXI_6 (.I0(LES[0]), 
                                  .I1(LES[1]), 
                                  .I2(LES[2]), 
                                  .I3(LES[3]), 
                                  .s(Scan[1:0]), 
                                  .o(LE));
endmodule
`timescale 1ns / 1ps

module disp_num(clk, 
                hex_num, 
                Les, 
                Points, 
                rst, 
                AN, 
                SEGMENT);

    input clk;
    input [15:0] hex_num;
    input [3:0] Les;
    input [3:0] Points;
    input rst;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire [31:0] clkd;
   wire [3:0] h;
   wire XLXN_13;
   wire XLXN_14;
   
   clkdiv  XLXI_1 (.clk(clk), 
                  .rst(rst), 
                  .clkdiv(clkd[31:0]));
   Dispsync_MUSER_disp_num  XLXI_2 (.Hexs(hex_num[15:0]), 
                                   .LES(Les[3:0]), 
                                   .point(Points[3:0]), 
                                   .Scan(clkd[18:17]), 
                                   .AN(AN[3:0]), 
                                   .Hex(h[3:0]), 
                                   .LE(XLXN_14), 
                                   .p(XLXN_13));
   MY_MC14495_MUSER_disp_num  XLXI_3 (.D0(h[0]), 
                                     .D1(h[1]), 
                                     .D2(h[2]), 
                                     .D3(h[3]), 
                                     .LE(XLXN_14), 
                                     .point(XLXN_13), 
                                     .a(SEGMENT[0]), 
                                     .b(SEGMENT[1]), 
                                     .c(SEGMENT[2]), 
                                     .d(SEGMENT[3]), 
                                     .e(SEGMENT[4]), 
                                     .f(SEGMENT[5]), 
                                     .g(SEGMENT[6]), 
                                     .p(SEGMENT[7]));
endmodule
